# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=validator-cli
    - PKG_CONFIG_ALLOW_CROSS=1

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: XgnUIpoZd/3/Htm8oa5RST4lFKAIo/TYLdkpt/mrIgUTCeBn41hLxzKyNrjsNSXZj3oaqvN+CmzUgSFWvtqkavOdK+M9/5IDuSP8gOEkQmL6BIzdEYT/JwcTovipOi1znmI/2pbbdF8xu35T5VFsmISxccJbjAjduPvyQfLIoDfj6YnyPDNELskoO9SZNhN7oXi+WQM+U465SkwYzXMqJdGdIgx5jwvcAWlB/BgbNhePaag3Ul3s68DcIG7vIh/FnZMa2n3VgZQW2lTtDss4NjSWdFHwX5zaRajQgzsQa5sVqlS6ZI/CCKGibsO37NBG6OhS0HaWu/oNrfshSFHy5i5OMnK+IldpD5Y0WMGDjbAbCibQ0d7hMFvuYOoabwEBt6hhmZGN7+06EMq63Lg+JHMwHncpsMuUvL4peJOcHkO+lXiWVlNUphaaREquSynXblk/yMFGeCPcesLgUQNWuJ3TUjb8S/A341no1dN5BbF94cCSzNzjvghHEs8Ct+ANyu28MG8BW5kEhHINXddYa0BvaT+PC1fP1nOfuVghCxf8/oOwb35Xt55s1VmJYV+MNul/iUKiKAR8CUnJgi56HK+YpN0oye8MGPSuyYmw0v+QbfeN7Y7Zu+5/+VmPdH6ZjqjkgZXStnWPZmKAVmA9O7e/PuBBtFtChCUgp41IjVs=

  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - cross-build
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
